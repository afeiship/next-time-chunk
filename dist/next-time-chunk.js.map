{"version":3,"sources":["next-time-chunk.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-time-chunk.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var DEFAULT_OPTIONS = { chunk: 10, interval: 200 };\n\n\n  nx.timeChunk = function (inItems, inCallback, inOptions) {\n    var timer;\n    var items = nx.slice(inItems, inCallback);\n    var options = nx.mix(null, DEFAULT_OPTIONS, inOptions);\n    var chunkSize = Math.min(options.chunk, inItems.length);\n    var start = function () {\n      for (var i = 0; i < chunkSize; i++) {\n        var obj = inItems.shift();\n        var idx = items.indexOf(obj);\n        inCallback(idx, obj);\n      }\n    };\n\n    return function () {\n      return new Promise(function (resolve) {\n        timer = setInterval(function () {\n          if (inItems.length === 0) {\n            clearInterval(timer);\n            resolve();\n          }\n          start();\n        }, options.interval);\n      });\n    };\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = nx.timeChunk;\n  }\n})();\n"]}